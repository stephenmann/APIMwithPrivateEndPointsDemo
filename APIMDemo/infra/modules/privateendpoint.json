{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "12658184856039042695"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "privateEndpointName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Private Endpoint"
      }
    },
    "privateDnsZoneName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Private DNS Zone"
      }
    },
    "vnetId": {
      "type": "string",
      "metadata": {
        "description": "ID of the Virtual Network"
      }
    },
    "apimId": {
      "type": "string",
      "metadata": {
        "description": "ID of the API Management service"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "ID of the subnet for the private endpoint"
      }
    },
    "plsSubnetId": {
      "type": "string",
      "metadata": {
        "description": "ID of the subnet for the private link service"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateDnsZoneName')]",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', parameters('privateDnsZoneName'), format('{0}-link', parameters('privateDnsZoneName')))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[parameters('vnetId')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[parameters('privateEndpointName')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[parameters('subnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "apim-connection",
            "properties": {
              "privateLinkServiceId": "[parameters('apimId')]",
              "groupIds": [
                "gateway"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-lb', parameters('privateEndpointName'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "frontendIpConfig",
            "properties": {
              "subnet": {
                "id": "[parameters('plsSubnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "backendPool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "lbRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', format('{0}-lb', parameters('privateEndpointName')), 'frontendIpConfig')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', format('{0}-lb', parameters('privateEndpointName')), 'backendPool')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', format('{0}-lb', parameters('privateEndpointName')), 'healthProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "healthProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateLinkServices",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}-service', parameters('privateEndpointName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "enableProxyProtocol": false,
        "loadBalancerFrontendIpConfigurations": [
          {
            "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', format('{0}-lb', parameters('privateEndpointName')), 'frontendIpConfig')]"
          }
        ],
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[parameters('plsSubnetId')]"
              },
              "primary": true,
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "visibility": {
          "subscriptions": []
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('privateEndpointName'), 'dnszonegroup')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "config",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpointName'))]"
      ]
    }
  ],
  "outputs": {
    "privateLinkServiceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateLinkServices', format('{0}-service', parameters('privateEndpointName')))]"
    }
  }
}